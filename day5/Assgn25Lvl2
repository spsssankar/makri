#PF-Assgn-35

#Global variable
list_of_marks=(25, 25, 3, 0, 0, 0, 25, 25, 0, 1)


def find_more_than_average():
    count=0
    sum=0
    for mark in list_of_marks:
        sum+=mark
    avg=(sum/250)*25
    for mark in list_of_marks:
        if mark>avg:
            count+=1 
    percentage=(count/10)*100
    return percentage

def sort_marks():
    list_of_marks1=list(list_of_marks)
    for i in range(0,len(list_of_marks1)-1):
        for j in range(i+1,len(list_of_marks1)):
            if list_of_marks1[j]<list_of_marks1[i]:
                temp=list_of_marks1[j]
                list_of_marks1[j]=list_of_marks1[i]
                list_of_marks1[i]=temp
    return list_of_marks1

def generate_frequency():
    freq=[]
    for mark in range(0,26):
        count=0
        for m in list_of_marks:
            if mark==m:
                count+=1
        freq.append(count)
    return freq

print(find_more_than_average())
print(generate_frequency())
print(sort_marks())
